{"version":3,"file":"static/js/87.ce622817.chunk.js","mappings":"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","sources":["components/BasicComponents/BaseForm.jsx","helpers/firstLetter.js","components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContsctList.jsx","components/ContactForm/ContactForm.styled.js","components/BasicComponents/ContactFormWrapper.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Box } from '@mui/system';\n\nconst StyledBox = styled(Box)`\n  margin: 20px auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const BaseForm = ({ handleSubmit, children }) => {\n  return (\n    <StyledBox\n      component=\"form\"\n      noValidate\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      {children}\n    </StyledBox>\n  );\n};\n","  \nexport const toUpperCaseMaker = (str) => {\n    let words = str.split(' ');\n    let capitalizedWords = [];\n    for (let i = 0; i < words.length; i++) {\n      capitalizedWords.push(words[i].charAt(0).toUpperCase() + words[i].slice(1));\n    }\n    return capitalizedWords.join(' ');\n  }\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\nwidth: 400px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ngap: 5px;\nmargin: 0 auto;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilters = state => state.filters.name;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filterName) => {\n    const visibleContacts = [...contacts].filter(({ name }) =>\n      name.toLowerCase().includes(filterName.toLowerCase())\n    );\n    return visibleContacts;\n  }\n);","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Avatar,\n  IconButton,\n  Link,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport styled from '@emotion/styled';\nimport { toUpperCaseMaker } from 'helpers/firstLetter';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\n\nexport const ListItemCustom = styled(ListItem)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 350px;\n`;\n\nexport const ContactItem = ({ id, name, number }) => {\n  const upperName = toUpperCaseMaker(name);\n  const dispatch = useDispatch();\n  const handleDelete = () =>\n    dispatch(deleteContact(id)).then(\n      console.log(`Contact ${upperName} was delete`)\n    );\n  return (\n    <ListItemCustom>\n      <ListItemAvatar>\n        <Avatar alt={upperName} src=\"/static/images/avatar/1.jpg\" />\n      </ListItemAvatar>\n      <ListItemText\n        primary={upperName}\n        secondary={\n          <Link\n            underline=\"hover\"\n            sx={{ display: 'flex', alignItems: 'center' }}\n            color=\"inherit\"\n            href={`tel:${number}`}\n          >\n            {' '}\n            <LocalPhoneIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\n            {number}\n          </Link>\n        }\n      />\n      <IconButton aria-label=\"delete\" type=\"button\" onClick={handleDelete}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItemCustom>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { ContactListStyled } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactListStyled>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} id={id}></ContactItem>\n      ))}\n    </ContactListStyled>\n  );\n};\n","import styled from 'styled-components';\n// import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  width: 300px;\n  display: flex;\n  justify-content: center;\n  gap: 35px;\n  flex-direction: column;\n  margin: 30px auto;\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: ${p => p.theme.colors.primary};\n  transition: color 250ms linear;\n  &:hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: inline-block;\n  padding: ${p => p.theme.space[3]}px;\n  width: 300px;\n  color: ${p => p.theme.colors.primary};\n  border: none;\n  border-bottom: 1px solid ${p => p.theme.colors.primary};\n  outline: none;\n\n  /* border-radius: ${p => p.theme.radii.medium}; */\n  font-size: ${p => p.theme.fontSizes[6]};\n  transition: border 250ms linear;\n  text-transform: capitalize;\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  &:hover,\n  :focus,\n  :focus-visible {\n    outline: none;\n    border-bottom: 1px solid ${p => p.theme.colors.accent};\n  }\n  &::placeholder {\n    color: ${p => p.theme.colors.secondary};\n  }\n`;\n\nexport const ErrorMsgName = styled(ErrorMessage)`\n  position: absolute;\n  top: 41px;\n  left: 26px;\n  color: ${p => p.theme.colors.warning};\n  font-size: ${p => p.theme.fontSizes[6]};\n`;\n\nexport const ErrorMsgPhone = styled(ErrorMessage)`\n  position: absolute;\n  top: 114px;\n  left: 18px;\n  color: ${p => p.theme.colors.warning};\n  font-size: ${p => p.theme.fontSizes[6]};\n`;\nexport const FormBtn = styled.button`\n  width: 130px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${p => p.theme.colors.primary};\n  background-color: transparent;\n  padding: ${p => p.theme.space[3]}px;\n  /* border: 2px solid ${p => p.theme.colors.primary}; */\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.medium};\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.text};\n    border: ${p => p.theme.borders.none};\n    outline: none;\n  }\n`;\n","import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Container } from '@mui/system';\n\n\n\nexport const ContactFormWrapper = ({ children }) => {\n  return (\n    <Container  style={{ marginTop: 30 }} maxWidth=\"xs\">\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon color=\"primary\"/>}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography variant=\"h6\" color=\"primary\">Add new contact</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {children}\n        </AccordionDetails>\n      </Accordion>\n    </Container>\n  );\n};\n","import { Formik } from 'formik';\nimport {\n  ErrorMsgName,\n  ErrorMsgPhone,\n  FormStyled,\n  Input,\n  Label,\n} from './ContactForm.styled';\nimport { BsTelephoneForwardFill, BsPersonSquare } from 'react-icons/bs';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Fab } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { toast } from 'react-hot-toast';\nimport { ContactFormWrapper } from 'components/BasicComponents/ContactFormWrapper';\n\nconst valName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nexport const ContactForm = () => {\n  const startValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup\n      .string()\n      .min(2, 'Too Short!')\n      .max(25, 'Too Long!')\n      .matches(\n        valName,\n        'Name may contain only letters, apostrophe, dash and spaces'\n      )\n      .required(),\n    number: yup.string().phone().required(),\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const addNewContact = ({ name, number }) => {\n    contacts.find(contact => contact.name === name)\n      ? toast(`${name} is already in contacts`, { icon: '⚠️' })\n      : dispatch(addContact({ name, number })).then(\n          toast(`Contact ${name} was added`, {\n            icon: '👏',\n          })\n        );\n  };\n\n  const handleSubmit = (value, { resetForm }) => {\n    addNewContact(value);\n    resetForm();\n  };\n\n  return (\n    <ContactFormWrapper>\n      <Formik\n        initialValues={startValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormStyled>\n          <Label htmlFor=\"name\">\n            <BsPersonSquare size=\"20\" />\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              autocomplite=\"on\"\n            />\n            <ErrorMsgName name=\"name\" component=\"div\" />\n          </Label>\n\n          <Label htmlFor=\"tel\">\n            <BsTelephoneForwardFill size=\"20\" />\n            <Input type=\"tel\" name=\"number\" placeholder=\"Phone\" />\n            <ErrorMsgPhone name=\"number\" component=\"span\" />\n          </Label>\n\n          <Fab type=\"submit\" color=\"primary\" aria-label=\"add\">\n            <AddIcon />\n          </Fab>\n        </FormStyled>\n      </Formik>\n    </ContactFormWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FilterForm = styled(Form) `\nwidth: 300px;\n display: flex;\n justify-content: center;\ngap: 35px;\n  flex-direction: column;\nmargin: 30px auto;\n`;\n\nexport const FilterLabel = styled.label`\ncolor: ${p => p.theme.colors.primary};\ndisplay: flex;\nalign-items: center;\ngap: 10px;\ntransition: color 250ms linear;\n&:hover, :focus {\n    color: ${p => p.theme.colors.accent};\n}\n`;\n\nexport const FilterInput = styled(Field)`\ndisplay: inline-block;\npadding: ${p => p.theme.space[3]}px;\nwidth: 300px;\ncolor: ${p => p.theme.colors.primary};\nborder: none;\nborder-bottom: 1px solid ${p => p.theme.colors.primary};\noutline: none;\n\n/* border-radius: ${p => p.theme.radii.medium}; */\nfont-size: ${p => p.theme.fontSizes[6]};\ntransition: border 250ms linear;\ntext-transform: capitalize;\n&:first-letter {\n    text-transform: uppercase;\n}\n&:hover, :focus ,:focus-visible{\n    outline: none;\n    border-bottom: 1px solid ${p => p.theme.colors.accent};\n}\n&::placeholder{\n  color: ${p => p.theme.colors.secondary};\n}\n\n`\n","import { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport { MdPersonSearch } from 'react-icons/md';\nimport { FilterForm, FilterInput, FilterLabel } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { selectFilters } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const filterId = nanoid();\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n\n  return (\n    <Formik>\n      <FilterForm>\n        <FilterLabel htmlFor={filterId}>\n          <MdPersonSearch size=\"25\" />\n          <FilterInput\n            id={filterId}\n            type=\"text\"\n            value={filter}\n            onChange={({ currentTarget: { value } })=> dispatch(setFilter (value))}\n          />\n        </FilterLabel>\n      </FilterForm>\n    </Formik>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContsctList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { BaseForm } from 'components/BasicComponents/BaseForm';\nimport { SkeletonContactList } from 'components/SkeletonCustom/SkeletonCastom';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n      <BaseForm>{isLoading && <SkeletonContactList />}</BaseForm>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["StyledBox","styled","Box","BaseForm","handleSubmit","children","component","noValidate","onSubmit","autoComplete","toUpperCaseMaker","str","words","split","capitalizedWords","i","length","push","charAt","toUpperCase","slice","join","ContactListStyled","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilters","filters","name","selectVisibleContacts","createSelector","filterName","filter","toLowerCase","includes","ListItemCustom","ListItem","ContactItem","id","number","upperName","dispatch","useDispatch","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Link","underline","sx","display","alignItems","color","href","LocalPhone","mr","fontSize","IconButton","type","onClick","deleteContact","then","console","log","Delete","ContactList","useSelector","map","FormStyled","Form","Label","p","theme","colors","accent","Input","Field","space","radii","medium","fontSizes","ErrorMsgName","ErrorMessage","warning","ErrorMsgPhone","borders","none","text","ContactFormWrapper","Container","style","marginTop","maxWidth","Accordion","AccordionSummary","expandIcon","ExpandMore","Typography","variant","AccordionDetails","valName","ContactForm","schema","yup","shape","min","max","matches","required","phone","initialValues","validationSchema","value","resetForm","find","contact","toast","icon","addContact","addNewContact","htmlFor","size","placeholder","autocomplite","Fab","Add","FilterForm","FilterLabel","FilterInput","Filter","filterId","nanoid","onChange","currentTarget","setFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}
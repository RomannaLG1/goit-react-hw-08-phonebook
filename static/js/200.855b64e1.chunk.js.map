{"version":3,"file":"static/js/200.855b64e1.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContsctList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\nwidth: 700px;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\ngap: 5px;\n`\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilters = state => state.filters.name;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filterName) => {\n    const visibleContacts = [...contacts].filter(({ name }) =>\n      name.toLowerCase().includes(filterName.toLowerCase())\n    );\n    return visibleContacts;\n  }\n);","import styled from 'styled-components';\n\nexport const ListItemStyled = styled.li`\nwidth: 330px;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\ngap: 5px;\n\n`;\nexport const ItemLink = styled.a`\nwidth: 300px;\ndisplay: flex;\ngap: 5px;\npadding: ${p => p.theme.space[2]}px;\njustify-content: space-between;\ntransition: background-color 250ms linear;\n&:hover, :focus {\n    cursor: pointer;\n    box-shadow: 3px 3px 3px rgb(0 0 0 / 12%), 3px 3px 3px rgb(0 0 0 / 14%),\n      3px 2px 3px rgb(0 0 0 / 20%);\n}\n`;\nexport const ItemText = styled.span`\nwidth: 205px;\ntext-align: left;\ncolor: ${p => p.theme.colors.primary};\nfont-size: ${p => p.theme.fontSizes[2]}px;\nfont-weight: ${p => p.theme.fontWeights.bold};\n\n`\n\nexport const DeleteButton = styled.button`\nbackground-color: transparent;\npadding: ${p => p.theme.space[1]}px;\ncolor: ${p => p.theme.colors.primary};\nborder: ${p => p.theme.borders.none};\ntransition: color 250ms linear;\n&:hover, :focus {\n    outline: none;\n    cursor: pointer;\n    color: ${p => p.theme.colors.warning};\n}\n`","import PropTypes from 'prop-types';\nimport {\n  ListItemStyled,\n  DeleteButton,\n  ItemText,\n  ItemLink,\n} from './ContactItem.styled';\nimport { TiDelete } from 'react-icons/ti';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\n\nexport const ContactItem = ({id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n  <ListItemStyled>\n    <ItemLink>\n      <ItemText>{name}</ItemText>\n      <ItemText>{number}</ItemText>\n      <DeleteButton type=\"button\" onClick={handleDelete}>\n        <TiDelete size=\"20\" />\n      </DeleteButton>\n    </ItemLink>\n  </ListItemStyled>\n);}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  \n};","import { ContactListStyled } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  console.log(contacts);\n  // const filterName = useSelector(selectFilters);\n  // const toNormalizedFilter = filterName.toLowerCase();\n  // const filterContacts = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(toNormalizedFilter)\n  // );\n\n  return (\n    <ContactListStyled>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} id={id}></ContactItem>\n      ))}\n    </ContactListStyled>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyled = styled(Form)`\nwidth: 300px;\n display: flex;\n justify-content: center;\ngap: 35px;\n  flex-direction: column;\nmargin: ${p => p.theme.space[4]}px;\n\n`;\n\nexport const Label = styled.label`\n display: flex;\n align-items: center;\n gap: 10px;\ncolor: ${p => p.theme.colors.primary};\ntransition: color 250ms linear;\n&:hover, :focus {\n  color: ${p => p.theme.colors.accent};\n}\n\n`;\n\nexport const Input = styled(Field)`\ndisplay: inline-block;\npadding: ${p => p.theme.space[3]}px;\nwidth: 200px;\ncolor: ${p => p.theme.colors.primary};\nborder: 2px solid ${p => p.theme.colors.primary};\nborder-radius: ${p => p.theme.radii.medium};\nfont-size: ${p => p.theme.fontSizes[6]};\ntransition: border 250ms linear;\ntext-transform: capitalize;\n&:first-letter {\n    text-transform: uppercase;\n}\n&:hover, :focus ,:focus-visible{\n    outline: none;\n    border: 2px solid ${p => p.theme.colors.accent};\n}\n&::placeholder{\n  color: ${p => p.theme.colors.accent};\n}\n`;\n\nexport const ErrorMsgName = styled(ErrorMessage)`\nposition: absolute;\ntop: 103px;\nleft: 83px;\ncolor: ${p => p.theme.colors.warning};\nfont-size: ${p => p.theme.fontSizes[6]};\n\n\n`;\n\nexport const ErrorMsgPhone = styled(ErrorMessage)`\nposition: absolute;\ntop: 176px;\nleft: 17px;\ncolor: ${p => p.theme.colors.warning};\nfont-size: ${p => p.theme.fontSizes[6]};\n`;\nexport const FormBtn = styled.button`\nwidth: 130px;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\ncolor: ${p => p.theme.colors.primary};\n  background-color: transparent;\n  padding: ${p => p.theme.space[3]}px;\n  /* border: 2px solid ${p => p.theme.colors.primary}; */\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.medium};\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover,\n  &:focus{\n    cursor: pointer;\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.text};\n    border: ${p => p.theme.borders.none};\n    outline: none;\n  }\n`;","import { AiOutlinePlus } from 'react-icons/ai';\nimport { Formik } from 'formik';\nimport {\n  ErrorMsgName,\n  ErrorMsgPhone,\n  FormBtn,\n  FormStyled,\n  Input,\n  Label,\n} from './ContactForm.styled';\nimport { BsTelephoneForwardFill, BsPersonSquare } from 'react-icons/bs';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n// import { selectContacts } from 'redux/selectors';\n// import { addContact } from '../../redux/operations';\n\nconst valName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nexport const ContactForm = () => {\n  const startValues = {\n    name: '',\n    number: '',\n  };\n\n  const schema = yup.object().shape({\n    name: yup\n      .string()\n      .min(2, 'Too Short!')\n      .max(10, 'Too Long!')\n      .matches(\n        valName,\n        'Name may contain only letters, apostrophe, dash and spaces'\n      )\n      .required(),\n    number: yup.string().phone('UA').required(),\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  // +380989809898///\n  const addNewContact = ({name, number}) => {\n    console.log('form', name, number);\n    contacts.find(\n      contact => contact.name === name\n    )\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({name, number}));\n  };\n\n  const handleSubmit = (value, { resetForm }) => {\n    addNewContact(value);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={startValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled>\n        <Label htmlFor=\"name\">\n          <BsPersonSquare size=\"30\" />\n          <Input type=\"text\" name=\"name\" placeholder=\"Name\" autocomplite=\"on\" />\n          <ErrorMsgName name=\"name\" component=\"div\" />\n        </Label>\n\n        <Label htmlFor=\"tel\">\n          <BsTelephoneForwardFill size=\"30\" />\n          <Input type=\"tel\" name=\"number\" placeholder=\"Phone\" />\n          <ErrorMsgPhone name=\"number\" component=\"span\" />\n        </Label>\n        <FormBtn type=\"submit\">\n          <AiOutlinePlus size=\"30\" />\n          Add contact\n        </FormBtn>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FilterForm = styled(Form) `\nwidth: 700px;\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\n`;\n\nexport const FilterLabel = styled.label`\ncolor: ${p => p.theme.colors.primary};\ndisplay: flex;\nalign-items: center;\ntransition: color 250ms linear;\n&:hover, :focus {\n    color: ${p => p.theme.colors.accent};\n}\n`;\n\nexport const FilterInput = styled(Field)`\ndisplay: inline-block;\npadding: ${p => p.theme.space[3]}px;\nwidth: 200px;\ncolor: ${p => p.theme.colors.primary};\nborder: 2px solid ${p => p.theme.colors.primary};\nborder-radius: ${p => p.theme.radii.medium};\nfont-size: ${p => p.theme.fontSizes[6]};\ntransition: border 250ms linear;\ntext-transform: capitalize;\n&:first-letter {\n    text-transform: uppercase;\n}\n&:hover, :focus ,:focus-visible{\n    outline: none;\n    border: 2px solid ${p => p.theme.colors.accent};\n}\n\n`","import { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport { MdPersonSearch } from 'react-icons/md';\nimport { FilterForm, FilterInput, FilterLabel } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { selectFilters } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const filterId = nanoid();\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n\n  return (\n    <Formik>\n      <FilterForm>\n        <FilterLabel htmlFor={filterId}>\n          <MdPersonSearch size=\"48\" />\n          <FilterInput\n            id={filterId}\n            type=\"text\"\n            value={filter}\n            onChange={({ currentTarget: { value } })=> dispatch(setFilter (value))}\n          />\n        </FilterLabel>\n      </FilterForm>\n    </Formik>\n  );\n};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContsctList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      <Filter/>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["ContactListStyled","styled","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilters","filters","name","selectVisibleContacts","createSelector","filterName","filter","toLowerCase","includes","ListItemStyled","ItemLink","p","theme","space","ItemText","colors","primary","fontSizes","fontWeights","bold","DeleteButton","borders","none","warning","ContactItem","id","number","dispatch","useDispatch","type","onClick","deleteContact","size","ContactList","useSelector","console","log","map","FormStyled","Form","Label","accent","Input","Field","radii","medium","ErrorMsgName","ErrorMessage","ErrorMsgPhone","FormBtn","text","valName","ContactForm","schema","yup","shape","min","max","matches","required","phone","initialValues","validationSchema","onSubmit","value","resetForm","find","contact","alert","addContact","addNewContact","htmlFor","placeholder","autocomplite","component","FilterForm","FilterLabel","FilterInput","Filter","filterId","nanoid","onChange","currentTarget","setFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}